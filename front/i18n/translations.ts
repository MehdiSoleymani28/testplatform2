

export const translations: Record<string, any> = {
  en: {
    // Sidebar
    sidebar: {
      platformName: "AI Test Platform",
      projects: "Projects",
      reports: "Reports",
      integrations: "Integrations",
      settings: "Settings",
      language: "Language",
    },
    // Projects Page
    projectsPage: {
      title: "Projects",
      newProject: "New Project",
      noProjectsTitle: "No Projects Yet",
      noProjectsDescription: "Get started by creating your first project.",
      createProject: "Create Project",
      edit: "Edit",
      delete: "Delete",
      confirmDelete: "Are you sure you want to delete this project and all its tests?",
      created: "Created",
      tests: "Tests",
    },
    // Project Form
    projectForm: {
      createTitle: "Create New Project",
      editTitle: "Edit Project",
      nameLabel: "Project Name",
      namePlaceholder: "e.g., My Awesome App",
      primaryPageNameLabel: "Primary Page Name",
      initialPageNameLabel: "Initial Page Name",
      pageNamePlaceholder: "e.g., Homepage",
      primaryPageUrlLabel: "Primary Page URL",
      initialPageUrlLabel: "Initial Page URL",
      urlPlaceholder: "https://example.com",
      descriptionLabel: "Description (Optional)",
      descriptionPlaceholder: "A short description of the project",
      cancel: "Cancel",
      saveChanges: "Save Changes",
      createProject: "Create Project"
    },
    // Project Detail Page
    projectDetailPage: {
      notFound: "Project Not Found",
      goBack: "Go back",
      totalTests: "Total Tests",
      uiTestsTab: "UI Tests",
      apiTestsTab: "API Tests",
      settingsTab: "Settings",
      generatedUiTestsTitle: "Generated UI Tests & Executions",
      noUiTestsTitle: "No UI Tests For This Page",
      noUiTestsDescription: "Use the generator above to create the first test for \"{pageName}\".",
      noPageSelectedTitle: "No Page Selected",
      noPageSelectedDescription: "Select or add a page above to begin generating UI tests.",
      generatedApiTestsTitle: "Generated API Tests & Executions",
      noApiTestsTitle: "No API Tests Yet",
      noApiTestsDescription: "Use the manager above to create endpoints and generate the first API test for this project.",
      runAllButton: "Run All Page Tests",
    },
    // Page Manager
    pageManager: {
      title: "Project Pages",
      addPage: "Add Page",
      noPages: "No pages yet. Click 'Add Page' to get started.",
      edit: "Edit {pageName}",
    },
    // Page Form
    pageForm: {
      createTitle: "Add New Page",
      editTitle: "Edit Page",
      nameLabel: "Page Name",
      namePlaceholder: "e.g., Login Page, Product Details",
      urlLabel: "Page URL",
      urlPlaceholder: "https://example.com/login",
      requirementsLabel: "User Stories / Requirements (Optional)",
      requirementsPlaceholder: "e.g., As a user, I want to be able to log in.\n- The login button should be visible.\n- An error message should show for invalid credentials.",
      requirementsHelper: "These will be used to pre-fill the test generator.",
      addPage: "Add Page",
    },
    // Test List Item
    testListItem: {
      showCode: "Show Code",
      hideCode: "Hide Code",
      runTest: "Run Test",
      notYetRun: "Not yet run",
      executionHistory: "Execution History ({count})",
      codeHistory: "Code History ({count})",
      errorEndpointNotFound: "Error: Linked endpoint not found.",
      editTest: "Edit",
    },
    // Test Edit Modal
    testEditModal: {
        title: "Edit Test Script",
        reasonLabel: "Reason for change (optional)",
        reasonPlaceholder: "e.g., Updated selector for new UI",
        saveChanges: "Save Changes",
    },
    // Test Run Details
    testRunDetails: {
      pending: "Pending...",
      duration: "Duration: {duration}",
      logs: "Logs",
      performanceMetrics: "Performance Metrics",
      loadTime: "Load Time",
      fcp: "FCP",
      lcp: "LCP",
      visualReport: "Visual Difference Report",
      baseline: "Baseline",
      current: "Current",
      difference: "Difference",
      failureScreenshot: "Failure Screenshot",
      aiTestHealer: "AI Test Healer",
    },
    // Reports Page
    reportsPage: {
      title: "Test Reports Dashboard",
      byProject: "Executions by Project",
      overallStatus: "Overall Status",
      allExecutions: "All Executions",
      allProjects: "All Projects",
      allCollections: "All Collections",
      allTypes: "All Types",
      uiTests: "UI Tests",
      apiTests: "API Tests",
      exportCsv: "Export CSV",
      status: "Status",
      type: "Type",
      testName: "Test Name",
      project: "Project",
      target: "Target",
      date: "Date",
      duration: "Duration",
      noExecutions: "No test executions match the current filters.",
    },
    // Settings Page
    settingsPage: {
      title: "Settings",
      platformTitle: "Platform & CI/CD Integration",
      platformApiKeyLabel: "Your Platform API Key",
      platformApiHelper: "Use this key to authenticate with the platform API.",
      regenerate: "Regenerate",
      confirmRegenerate: "Are you sure you want to regenerate the API key? The old key will be invalidated immediately and any CI/CD integrations using it will fail.",
      aiProviderTitle: "AI Provider Configuration",
      securityWarningTitle: "Security Warning",
      securityWarningBody: "API keys are stored in your browser's local storage. This is not secure for production environments. Do not use this application for sensitive data with this storage method.",
      apiKeyTitle: "{provider} API Key",
      apiKeyPlaceholder: "Enter your {provider} API key",
      validate: "Validate",
      checking: "Checking...",
      valid: "Valid",
      invalid: "Invalid Key",
      validationFailed: "Validation Failed",
      systemConfigTitle: "System Configuration",
      maxConcurrentTestsLabel: "Max Concurrent Test Runs",
      maxConcurrentTestsHelper: "Controls how many tests can be in the 'Running' state at the same time.",
      saveAll: "Save All Settings",
      saved: "Saved!",
      copied: "Copied!",
      copy: "Copy",
    },
    // Integrations Page
    integrationsPage: {
      title: "Integrations & API",
      description: "Automate your testing workflow by integrating the AI Test Platform with your CI/CD pipeline.",
      apiKeyTitle: "Your API Key",
      apiKeyDescription: "Use this API key to authenticate requests from your CI/CD pipeline or other scripts. Keep it secure and treat it like a password. You can regenerate this key in the {settingsLink} page.",
      settingsLink: "Settings",
      apiUsageTitle: "API Usage",
      apiUsageDescription: "You can trigger test runs by sending a `POST` request to the test's run endpoint.",
      apiNote: "This API is conceptual. In a real application, `YOUR_APP_DOMAIN` would be replaced with the actual domain of this platform, and a backend would handle these requests. Project and Test IDs can be found on the project detail pages.",
      webhookTitle: "Webhook Notifications",
      webhookDescription: "To receive real-time results, you can configure webhook URLs in your {projectSettingsLink}. When a test run completes, a `POST` request with the following JSON payload will be sent to each configured URL.",
      projectSettingsLink: "Project Settings",
      cliTitle: "Conceptual CLI",
      cliDescription: "While a real CLI is not provided in this demo, here is a conceptual example of how it could work to simplify CI/CD integration.",
      recipesTitle: "CI/CD Integration Recipes",
      recipesNote: "Remember to add your Platform API Key as a secret (e.g., `AITP_API_KEY`) in your CI/CD provider's settings.",
    },
    // UI Test Generator
    uiTestGenerator: {
      selectPage: "Select a Page to Begin",
      selectPageDescription: "Please select a page from the list above to start generating tests.",
      step1: "1. Scan Page URL for {pageName}",
      scanInstruction: "Enter the public URL of the page you want to scan. The AI will analyze the live page content to identify elements and accessibility issues.",
      aiProvider: "AI Provider:",
      scanButton: "Scan Page URL",
      scanningButton: "Scanning URL...",
      accessibilityResults: "Accessibility Analysis Results",
      accessibilityDescription: "The following potential accessibility issues were detected. You can use this information to improve your page or generate an \"Accessibility Compliance\" test below.",
      step2: "2. Choose Generation Method",
      generateByIntent: "Generate by Intent",
      generateByIntentDesc: "Select from common test scenarios like login, form submission, etc.",
      generateFromStory: "Generate from User Story",
      generateFromStoryDesc: "Describe what you want to test in plain language.",
      step3Intent: "3. Configure Intent-Based Test",
      selectFramework: "Select Framework",
      selectIntents: "Select Common Intents",
      generateIntentButton: "Generate Test by Intent",
      generatingButton: "Generating...",
      step3Story: "3. Configure Test from User Story",
      userStoryLabel: "Enter User Story / Requirements",
      prefilledHelper: "Pre-filled from page settings",
      userStoryPlaceholder: "e.g., As a user, I want to be able to fill in the login form with my username and password, click the 'Sign In' button, and then be redirected to the dashboard page.",
      generateStoryButton: "Generate Test from Story",
      step4: "4. Generated Script",
      analysisNotesTitle: "AI Analysis Notes",
      testName: "Test Name",
      saveTest: "Save Test",
      saved: "Saved",
    },
    // API Test Generator
    apiTestGenerator: {
      generateTest: "Generate Test",
      generatingTest: "Generating...",
      saveGeneratedApiTestTitle: "Save Generated API Test",
      save: "Save",
      runAllInCollection: "Run All Tests"
    },
    // API Endpoint Manager
    apiEndpointManager: {
        title: "API Endpoint Manager",
        importButton: "Import from OpenAPI",
        addButton: "Add Endpoint",
        addCollection: "Add Collection",
        uncategorized: "Uncategorized",
        editCollection: "Edit Collection",
        deleteCollection: "Delete Collection",
        deleteCollectionConfirm: "Delete collection \"{collectionName}\"? Endpoints within it will become uncategorized.",
        testCreated: "Test Created",
        testMissing: "Test Missing",
        runTestButton: "Run Test",
        generateTestButton: "Generate Test",
        generatingButton: "Generating...",
        noEndpoints: "No API endpoints defined. Add one to get started.",
        generateAllButton: "Generate Tests for All",
        runAllButton: "Run All API Tests",
        deleteConfirm: "Delete \"{endpointName}\" and its associated test?",
    },
    // API Collection Form
    apiCollectionForm: {
      createTitle: "Create New Collection",
      editTitle: "Edit Collection",
      nameLabel: "Collection Name",
      addButton: "Add Collection",
    },
    // API Endpoint Form
    apiEndpointForm: {
      createTitle: "Add New API Endpoint",
      editTitle: "Edit API Endpoint",
      collectionLabel: "Collection (Optional)",
      noCollection: "No Collection / Uncategorized",
      nameLabel: "Endpoint Name",
      namePlaceholder: "e.g., Get User by ID",
      methodLabel: "Method",
      urlLabel: "URL / Path",
      urlPlaceholder: "/users/{userId}",
      headersLabel: "Default Headers (JSON)",
      bodySchemaLabel: "Request Body Schema (JSON)",
      addButton: "Add Endpoint",
      requirementsLabel: "Requirements / User Story (Optional)",
      requirementsPlaceholder: "e.g., As an admin, I should be able to fetch a user by their ID.\n- If the user exists, return a 200 OK with user data.\n- If the user does not exist, return a 404 Not Found.",
      requirementsHelper: "These will be used by the AI to generate more accurate and scenario-based tests.",
    },
    // AI Fix Modal
    aiFixModal: {
      title: "AI Test Healer",
      fixingTest: "Fixing test: {testName}",
      description: "To fix this test, the AI needs the page's current HTML source code to compare against the failed test.",
      htmlPlaceholder: "Paste the full HTML source for the page where the test failed...",
      provider: "Provider:",
      scanButton: "Scan & Suggest Fix",
      analyzing: "AI is analyzing the failure...",
      analyzingDesc: "This may take a moment.",
      analysisTitle: "AI Analysis & Suggestion",
      originalCode: "Original Code",
      suggestedFix: "Suggested Fix",
      acceptButton: "Accept & Update Test",
      noFix: "No fix could be determined.",
      noFixDesc: "See the analysis notes above for details.",
    },
     // Notification Bell
    notificationBell: {
        title: "Notifications",
        markAllAsRead: "Mark all as read",
        noNotifications: "No notifications yet.",
    },
    // Project Settings
    projectSettings: {
      vrtTitle: "Visual Regression Testing",
      vrtDescription: "Automatically capture and compare screenshots to detect unintended UI changes on successful UI test runs.",
      vrtEnable: "Enable Visual Comparisons",
      apiAuthTitle: "API Authentication",
      apiAuthKeyLabel: "API Key / Bearer Token",
      apiAuthKeyPlaceholder: "Enter Bearer token or API key...",
      apiAuthDescription: "This key will be provided to the AI to include in generated API tests for authenticated endpoints (e.g., as a Bearer token).",
      emailRecipientsTitle: "Email Recipients",
      emailPlaceholder: "e.g., dev-alerts@example.com",
      webhookUrlsTitle: "Webhook URLs",
      webhookPlaceholder: "e.g., https://hooks.slack.com/...",
      failureThresholdTitle: "Failure Rate Threshold",
      failureThresholdDescription: "Get notified if the test success rate for this project drops below this percentage.",
    },
    // Common
    common: {
      status: {
        Success: "Success",
        Failure: "Failure",
        Running: "Running",
        Queued: "Queued",
      }
    }
  },
  fa: {
    // Sidebar
    sidebar: {
      platformName: "پلتفرم تست هوشمند",
      projects: "پروژه‌ها",
      reports: "گزارش‌ها",
      integrations: "یکپارچه‌سازی",
      settings: "تنظیمات",
      language: "زبان",
    },
    // Projects Page
    projectsPage: {
      title: "پروژه‌ها",
      newProject: "پروژه جدید",
      noProjectsTitle: "هنوز پروژه‌ای وجود ندارد",
      noProjectsDescription: "با ایجاد اولین پروژه خود شروع کنید.",
      createProject: "ایجاد پروژه",
      edit: "ویرایش",
      delete: "حذف",
      confirmDelete: "آیا از حذف این پروژه و تمام تست‌های آن مطمئن هستید؟",
      created: "ایجاد شده در",
      tests: "تست‌ها",
    },
    // Project Form
    projectForm: {
      createTitle: "ایجاد پروژه جدید",
      editTitle: "ویرایش پروژه",
      nameLabel: "نام پروژه",
      namePlaceholder: "مثلا: اپلیکیشن من",
      primaryPageNameLabel: "نام صفحه اصلی",
      initialPageNameLabel: "نام صفحه اولیه",
      pageNamePlaceholder: "مثلا: صفحه اصلی",
      primaryPageUrlLabel: "URL صفحه اصلی",
      initialPageUrlLabel: "URL صفحه اولیه",
      urlPlaceholder: "https://example.com",
      descriptionLabel: "توضیحات (اختیاری)",
      descriptionPlaceholder: "توضیحی کوتاه درباره پروژه",
      cancel: "انصراف",
      saveChanges: "ذخیره تغییرات",
      createProject: "ایجاد پروژه"
    },
    // Project Detail Page
    projectDetailPage: {
      notFound: "پروژه یافت نشد",
      goBack: "بازگشت",
      totalTests: "مجموع تست‌ها",
      uiTestsTab: "تست‌های UI",
      apiTestsTab: "تست‌های API",
      settingsTab: "تنظیمات",
      generatedUiTestsTitle: "تست‌های UI تولید شده و اجراها",
      noUiTestsTitle: "تستی برای این صفحه وجود ندارد",
      noUiTestsDescription: "از مولد بالا برای ایجاد اولین تست برای «{pageName}» استفاده کنید.",
      noPageSelectedTitle: "صفحه‌ای انتخاب نشده است",
      noPageSelectedDescription: "برای شروع تولید تست‌های UI، یک صفحه را انتخاب یا اضافه کنید.",
      generatedApiTestsTitle: "تست‌های API تولید شده و اجراها",
      noApiTestsTitle: "هنوز تست API وجود ندارد",
      noApiTestsDescription: "از مدیر بالا برای ایجاد اندپوینت و تولید اولین تست API برای این پروژه استفاده کنید.",
      runAllButton: "اجرای همه تست‌های صفحه",
    },
    // Page Manager
    pageManager: {
      title: "صفحات پروژه",
      addPage: "افزودن صفحه",
      noPages: "هنوز صفحه‌ای وجود ندارد. برای شروع روی 'افزودن صفحه' کلیک کنید.",
      edit: "ویرایش {pageName}",
    },
    // Page Form
    pageForm: {
      createTitle: "افزودن صفحه جدید",
      editTitle: "ویرایش صفحه",
      nameLabel: "نام صفحه",
      namePlaceholder: "مثلا: صفحه ورود، جزئیات محصول",
      urlLabel: "URL صفحه",
      urlPlaceholder: "https://example.com/login",
      requirementsLabel: "داستان‌های کاربری / نیازمندی‌ها (اختیاری)",
      requirementsPlaceholder: "مثلا: به عنوان کاربر، می‌خواهم بتوانم وارد شوم.\n- دکمه ورود باید قابل مشاهده باشد.\n- برای اطلاعات نامعتبر باید پیام خطا نمایش داده شود.",
      requirementsHelper: "این موارد برای پر کردن خودکار مولد تست استفاده خواهند شد.",
      addPage: "افزودن صفحه",
    },
    // Test List Item
    testListItem: {
      showCode: "نمایش کد",
      hideCode: "پنهان کردن کد",
      runTest: "اجرای تست",
      notYetRun: "هنوز اجرا نشده",
      executionHistory: "تاریخچه اجرا ({count})",
      codeHistory: "تاریخچه کد ({count})",
      errorEndpointNotFound: "خطا: اندپوینت مرتبط یافت نشد.",
      editTest: "ویرایش",
    },
    // Test Edit Modal
     testEditModal: {
        title: "ویرایش اسکریپت تست",
        reasonLabel: "دلیل تغییر (اختیاری)",
        reasonPlaceholder: "مثلا: به‌روزرسانی انتخابگر برای UI جدید",
        saveChanges: "ذخیره تغییرات",
    },
    // Test Run Details
    testRunDetails: {
      pending: "در انتظار...",
      duration: "مدت زمان: {duration}",
      logs: "لاگ‌ها",
      performanceMetrics: "سنجه‌های کارایی",
      loadTime: "زمان بارگذاری",
      fcp: "FCP",
      lcp: "LCP",
      visualReport: "گزارش تفاوت بصری",
      baseline: "پایه",
      current: "فعلی",
      difference: "تفاوت",
      failureScreenshot: "اسکرین‌شات شکست",
      aiTestHealer: "شفادهنده تست هوشمند",
    },
    // Reports Page
    reportsPage: {
      title: "داشبورد گزارش‌های تست",
      byProject: "اجراها بر اساس پروژه",
      overallStatus: "وضعیت کلی",
      allExecutions: "تمام اجراها",
      allProjects: "همه پروژه‌ها",
      allCollections: "همه گروه‌ها",
      allTypes: "همه انواع",
      uiTests: "تست‌های UI",
      apiTests: "تست‌های API",
      exportCsv: "خروجی CSV",
      status: "وضعیت",
      type: "نوع",
      testName: "نام تست",
      project: "پروژه",
      target: "هدف",
      date: "تاریخ",
      duration: "مدت زمان",
      noExecutions: "هیچ اجرای تستی با فیلترهای فعلی مطابقت ندارد.",
    },
    // Settings Page
    settingsPage: {
      title: "تنظیمات",
      platformTitle: "یکپارچه‌سازی پلتفرم و CI/CD",
      platformApiKeyLabel: "کلید API پلتفرم شما",
      platformApiHelper: "از این کلید برای احراز هویت با API پلتفرم استفاده کنید.",
      regenerate: "تولید مجدد",
      confirmRegenerate: "آیا از تولید مجدد کلید API مطمئن هستید؟ کلید قدیمی بلافاصله باطل شده و هر یکپارچه‌سازی CI/CD که از آن استفاده می‌کند، دچار مشکل خواهد شد.",
      aiProviderTitle: "پیکربندی ارائه‌دهنده هوش مصنوعی",
      securityWarningTitle: "هشدار امنیتی",
      securityWarningBody: "کلیدهای API در حافظه محلی مرورگر شما ذخیره می‌شوند. این برای محیط‌های تولیدی امن نیست. از این برنامه برای داده‌های حساس با این روش ذخیره‌سازی استفاده نکنید.",
      apiKeyTitle: "کلید API {provider}",
      apiKeyPlaceholder: "کلید API {provider} خود را وارد کنید",
      validate: "اعتبارسنجی",
      checking: "در حال بررسی...",
      valid: "معتبر",
      invalid: "کلید نامعتبر",
      validationFailed: "اعتبارسنجی ناموفق بود",
      systemConfigTitle: "پیکربندی سیستم",
      maxConcurrentTestsLabel: "حداکثر اجرای همزمان تست",
      maxConcurrentTestsHelper: "تعداد تست‌هایی که می‌توانند همزمان در وضعیت 'در حال اجرا' باشند را کنترل می‌کند.",
      saveAll: "ذخیره تمام تنظیمات",
      saved: "ذخیره شد!",
      copied: "کپی شد!",
      copy: "کپی",
    },
    // Integrations Page
    integrationsPage: {
      title: "یکپارچه‌سازی و API",
      description: "با یکپارچه‌سازی پلتفرم تست هوشمند با پایپ‌لاین CI/CD خود، گردش کار تست خود را خودکار کنید.",
      apiKeyTitle: "کلید API شما",
      apiKeyDescription: "از این کلید API برای احراز هویت درخواست‌ها از پایپ‌لاین CI/CD یا اسکریپت‌های دیگر استفاده کنید. آن را امن نگه دارید و مانند یک رمز عبور با آن رفتار کنید. می‌توانید این کلید را در صفحه {settingsLink} دوباره تولید کنید.",
      settingsLink: "تنظیمات",
      apiUsageTitle: "استفاده از API",
      apiUsageDescription: "می‌توانید با ارسال یک درخواست `POST` به اندپوینت اجرای تست، اجراها را فعال کنید.",
      apiNote: "این API مفهومی است. در یک برنامه واقعی، `YOUR_APP_DOMAIN` با دامنه واقعی این پلتفرم جایگزین می‌شود و یک بک‌اند این درخواست‌ها را مدیریت می‌کند. شناسه‌های پروژه و تست را می‌توان در صفحات جزئیات پروژه یافت.",
      webhookTitle: "اطلاعیه‌های وب‌هوک",
      webhookDescription: "برای دریافت نتایج در لحظه، می‌توانید URLهای وب‌هوک را در {projectSettingsLink} خود پیکربندی کنید. پس از اتمام اجرای یک تست، یک درخواست `POST` با پی‌لود JSON زیر به هر URL پیکربندی شده ارسال خواهد شد.",
      projectSettingsLink: "تنظیمات پروژه",
      cliTitle: "CLI مفهومی",
      cliDescription: "در حالی که یک CLI واقعی در این دمو ارائه نشده است، در اینجا یک مثال مفهومی از نحوه عملکرد آن برای ساده‌سازی یکپارچه‌سازی CI/CD آورده شده است.",
      recipesTitle: "دستورالعمل‌های یکپارچه‌سازی CI/CD",
      recipesNote: "به یاد داشته باشید که کلید API پلتفرم خود را به عنوان یک راز (مثلاً `AITP_API_KEY`) در تنظیمات ارائه‌دهنده CI/CD خود اضافه کنید.",
    },
     // UI Test Generator
    uiTestGenerator: {
      selectPage: "برای شروع یک صفحه انتخاب کنید",
      selectPageDescription: "لطفاً برای شروع تولید تست، یک صفحه از لیست بالا انتخاب کنید.",
      step1: "۱. اسکن URL صفحه برای {pageName}",
      scanInstruction: "URL عمومی صفحه‌ای که می‌خواهید اسکن شود را وارد کنید. هوش مصنوعی محتوای زنده صفحه را برای شناسایی عناصر و مشکلات دسترسی‌پذیری تحلیل خواهد کرد.",
      aiProvider: "ارائه‌دهنده هوش مصنوعی:",
      scanButton: "اسکن URL صفحه",
      scanningButton: "در حال اسکن URL...",
      accessibilityResults: "نتایج تحلیل دسترسی‌پذیری",
      accessibilityDescription: "مشکلات احتمالی دسترسی‌پذیری زیر شناسایی شد. می‌توانید از این اطلاعات برای بهبود صفحه خود یا تولید تست «انطباق دسترسی‌پذیری» در زیر استفاده کنید.",
      step2: "۲. روش تولید را انتخاب کنید",
      generateByIntent: "تولید بر اساس هدف",
      generateByIntentDesc: "از میان سناریوهای تست رایج مانند ورود، ارسال فرم و غیره انتخاب کنید.",
      generateFromStory: "تولید از داستان کاربری",
      generateFromStoryDesc: "آنچه را که می‌خواهید تست کنید به زبان ساده توصیف کنید.",
      step3Intent: "۳. پیکربندی تست مبتنی بر هدف",
      selectFramework: "انتخاب فریم‌ورک",
      selectIntents: "انتخاب اهداف رایج",
      generateIntentButton: "تولید تست بر اساس هدف",
      generatingButton: "در حال تولید...",
      step3Story: "۳. پیکربندی تست از داستان کاربری",
      userStoryLabel: "داستان کاربری / نیازمندی‌ها را وارد کنید",
      prefilledHelper: "از تنظیمات صفحه پر شده است",
      userStoryPlaceholder: "مثلا: به عنوان یک کاربر، می‌خواهم بتوانم فرم ورود را با نام کاربری و رمز عبورم پر کنم، روی دکمه 'ورود' کلیک کنم و سپس به صفحه داشبورد هدایت شوم.",
      generateStoryButton: "تولید تست از داستان",
      step4: "۴. اسکریپت تولید شده",
      analysisNotesTitle: "یادداشت‌های تحلیل هوش مصنوعی",
      testName: "نام تست",
      saveTest: "ذخیره تست",
      saved: "ذخیره شد",
    },
    // API Test Generator
    apiTestGenerator: {
      generateTest: "تولید تست",
      generatingTest: "در حال تولید...",
      saveGeneratedApiTestTitle: "ذخیره تست API تولید شده",
      save: "ذخیره",
      runAllInCollection: "اجرای همه تست‌ها"
    },
    // API Endpoint Manager
    apiEndpointManager: {
        title: "مدیریت اندپوینت‌های API",
        importButton: "وارد کردن از OpenAPI",
        addButton: "افزودن اندپوینت",
        addCollection: "افزودن گروه",
        uncategorized: "دسته‌بندی نشده",
        editCollection: "ویرایش گروه",
        deleteCollection: "حذف گروه",
        deleteCollectionConfirm: "آیا گروه «{collectionName}» حذف شود؟ اندپوینت‌های داخل آن دسته‌بندی‌نشده خواهند شد.",
        testCreated: "تست ایجاد شده",
        testMissing: "تست موجود نیست",
        runTestButton: "اجرای تست",
        generateTestButton: "تولید تست",
        generatingButton: "در حال تولید...",
        noEndpoints: "هیچ اندپوینت API تعریف نشده است. برای شروع یکی اضافه کنید.",
        generateAllButton: "تولید تست برای همه",
        runAllButton: "اجرای همه تست‌های API",
        deleteConfirm: "آیا از حذف «{endpointName}» و تست مرتبط با آن مطمئن هستید؟",
    },
     // API Collection Form
    apiCollectionForm: {
      createTitle: "ایجاد گروه جدید",
      editTitle: "ویرایش گروه",
      nameLabel: "نام گروه",
      addButton: "افزودن گروه",
    },
    // API Endpoint Form
    apiEndpointForm: {
      createTitle: "افزودن اندپوینت API جدید",
      editTitle: "ویرایش اندپوینت API",
      collectionLabel: "گروه (اختیاری)",
      noCollection: "بدون گروه / دسته‌بندی‌نشده",
      nameLabel: "نام اندپوینت",
      namePlaceholder: "مثلا: دریافت کاربر با شناسه",
      methodLabel: "متد",
      urlLabel: "URL / مسیر",
      urlPlaceholder: "/users/{userId}",
      headersLabel: "هدرهای پیش‌فرض (JSON)",
      bodySchemaLabel: "اسکیمای بدنه درخواست (JSON)",
      addButton: "افزودن اندپوینت",
      requirementsLabel: "نیازمندی‌ها / داستان کاربری (اختیاری)",
      requirementsPlaceholder: "مثلا: به عنوان ادمین، باید بتوانم کاربر را با شناسه‌اش دریافت کنم.\n- اگر کاربر وجود داشت، پاسخ 200 OK با داده‌های کاربر بازگردانده شود.\n- اگر کاربر وجود نداشت، پاسخ 404 Not Found بازگردانده شود.",
      requirementsHelper: "این موارد توسط هوش مصنوعی برای تولید تست‌های دقیق‌تر و مبتنی بر سناریو استفاده خواهد شد.",
    },
    // AI Fix Modal
    aiFixModal: {
      title: "شفادهنده تست هوشمند",
      fixingTest: "در حال رفع اشکال تست: {testName}",
      description: "برای رفع اشکال این تست، هوش مصنوعی به کد منبع HTML فعلی صفحه نیاز دارد تا آن را با تست ناموفق مقایسه کند.",
      htmlPlaceholder: "کد منبع کامل HTML صفحه‌ای که تست در آن ناموفق بود را اینجا جای‌گذاری کنید...",
      provider: "ارائه‌دهنده:",
      scanButton: "اسکن و پیشنهاد رفع اشکال",
      analyzing: "هوش مصنوعی در حال تحلیل شکست است...",
      analyzingDesc: "این ممکن است کمی طول بکشد.",
      analysisTitle: "تحلیل و پیشنهاد هوش مصنوعی",
      originalCode: "کد اصلی",
      suggestedFix: "رفع اشکال پیشنهادی",
      acceptButton: "پذیرش و به‌روزرسانی تست",
      noFix: "هیچ رفع اشکالی پیدا نشد.",
      noFixDesc: "برای جزئیات به یادداشت‌های تحلیل بالا مراجعه کنید.",
    },
    // Notification Bell
    notificationBell: {
        title: "اعلان‌ها",
        markAllAsRead: "علامت‌گذاری همه به عنوان خوانده شده",
        noNotifications: "هنوز اعلانی وجود ندارد.",
    },
    // Project Settings
    projectSettings: {
      vrtTitle: "تست رگرسیون بصری",
      vrtDescription: "به‌طور خودکار اسکرین‌شات‌ها را برای تشخیص تغییرات ناخواسته UI در اجراهای موفق تست UI ضبط و مقایسه کنید.",
      vrtEnable: "فعال کردن مقایسه‌های بصری",
      apiAuthTitle: "احراز هویت API",
      apiAuthKeyLabel: "کلید API / توکن Bearer",
      apiAuthKeyPlaceholder: "توکن Bearer یا کلید API را وارد کنید...",
      apiAuthDescription: "این کلید به هوش مصنوعی ارائه می‌شود تا در تست‌های API تولید شده برای اندپوینت‌های احراز هویت شده (مثلاً به عنوان توکن Bearer) گنجانده شود.",
      emailRecipientsTitle: "دریافت‌کنندگان ایمیل",
      emailPlaceholder: "مثلا: dev-alerts@example.com",
      webhookUrlsTitle: "URLهای وب‌هوک",
      webhookPlaceholder: "مثلا: https://hooks.slack.com/...",
      failureThresholdTitle: "آستانه نرخ شکست",
      failureThresholdDescription: "اگر نرخ موفقیت تست برای این پروژه به زیر این درصد رسید، مطلع شوید.",
    },
    // Common
    common: {
      status: {
        Success: "موفق",
        Failure: "شکست",
        Running: "در حال اجرا",
        Queued: "در صف",
      }
    }
  },
};